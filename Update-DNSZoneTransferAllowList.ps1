Function Backup-DNSZoneInScope {param ([Parameter(Mandatory=$False)] $ComputerName = $env:COMPUTERNAME)Get-DnsServerZone -ComputerName $ComputerName | Where-Object {$_.ZoneType -eq 'Primary' -and $_.ZoneName -ne 'TrustAnchors' -and $_.IsAutoCreated -eq $False} | Select * | Export-CSV -NoTypeInformation .\Backup_$ComputerName_$(Get-Date -f yyyy-MM-dd_hh_mm_ss).csv}Function Get-DNSZoneInScope {param ([Parameter(Mandatory=$False)] $ComputerName = $env:COMPUTERNAME)Get-DnsServerZone -ComputerName $ComputerName | Where-Object {$_.ZoneType -eq 'Primary' -and $_.ZoneName -ne 'TrustAnchors' -and $_.IsAutoCreated -eq $False -and $_.SecureSecondaries -eq 'TransferToSecureServers'} }Function Update-DNSZoneTransferAllowList {param ([Parameter(Mandatory=$True)] $IPsToAdd,[Parameter(Mandatory=$True)] $ZoneNameToEdit,[Parameter(Mandatory=$False)] $ComputerName = $env:COMPUTERNAME)# Backup Zone InfoGet-DnsServerZone -ComputerName $ComputerName | Select * | Export-CSV -NoTypeInformation .\Backup_$ComputerName_$(Get-Date -f yyyy-MM-dd_hh_mm_ss).csv# Get Scope $Scope = Get-DnsServerZone -ComputerName $ComputerName -Name $ZoneNameToEdit Switch ($Scope.SecureSecondaries){    TransferAnyServer{Write-Warning "$ZoneNameToEdit is already set to TransferAnyServer and will not be modified"}    TransferToSecureServers{        # Displays the current settings        Get-DnsServerZone -ComputerName $ComputerName | Where-Object {$_.ZoneName -eq $ZoneNameToEdit} | Select ZoneName,SecureSecondaries,SecondaryServers                 # Gets this DNS Zone Secondaries        $Secondaries = $Scope | Select ZoneName,SecureSecondaries,SecondaryServers        # Extracts the secondaries from the live zone        $ExistingIPs = $Secondaries.SecondaryServers | select IPAddressToString
